import React, { useState } from "react";
import {
  Accordion,
  AccordionSummary,
  AccordionDetails,
  TextField,
  Button,
  Radio,
  RadioGroup,
  FormControlLabel,
  Typography,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import LocationOnIcon from "@mui/icons-material/LocationOn";

// Mock data
const mockTrips = [
  {
    id: 160,
    date: "Aug 25, 2024",
    timeRange: "8:00 AM - 9:00 PM CDT",
    status: "Trip in progress",
    orders: [
      {
        id: "2304902394023",
        customer: "Kathleen Doe",
        time: "3:15 PM - 5:00 PM",
        status: "Delivery in progress",
      },
      {
        id: "838902398402",
        customer: "James Liu",
        time: "2:15 PM - 3:00 PM",
        status: "Cancelled",
      },
      {
        id: "19199132432342",
        customer: "Dora Amana",
        time: "1:15 PM - 2:00 PM",
        status: "Delivery in progress",
      },
    ],
    pickup: {
      name: "Walmart BENBROOK #4949",
      time: "1:30 PM - 2:00 PM",
      address: "6675 BUSINESS CENTER DR, HIGHLANDS RANCH, CO 80130-3603",
    },
  },
  {
    id: 15,
    date: "Aug 25, 2024",
    timeRange: "11:00 AM - 4:00 PM CDT",
    status: "Trip complete",
    orders: [
      {
        id: "2304902394023",
        customer: "Kathleen Doe",
        time: "3:15 PM - 5:00 PM",
        status: "Delivery in progress",
      },
      {
        id: "838902398402",
        customer: "James Liu",
        time: "2:15 PM - 3:00 PM",
        status: "Cancelled",
      },
      {
        id: "19199132432342",
        customer: "Dora Amana",
        time: "1:15 PM - 2:00 PM",
        status: "Delivery in progress",
      },
    ],
    pickup: {
      name: "Walmart BENBROOK #4949",
      time: "1:30 PM - 2:00 PM",
      address: "6675 BUSINESS CENTER DR, HIGHLANDS RANCH, CO 80130-3603",
    },
  },
  {
    id: 50,
    date: "Aug 25, 2024",
    timeRange: "7:00 AM - 8:00 AM CDT",
    status: "Trip complete",
    orders: [],
  },
];

const DriverOrderSelection = () => {
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedOrder, setSelectedOrder] = useState("");

  const handleSearch = () => {
    // Implement search functionality here
    console.log("Searching for:", searchQuery);
  };

  const handleOrderSelection = (event: React.ChangeEvent<HTMLInputElement>) => {
    setSelectedOrder(event.target.value);
  };

  return (
    <div className="container mx-auto p-4 bg-gray-100">
      <h1 className="text-xl font-semibold mb-4">
        Select the order the driver needs help with
      </h1>

      {/* Search Bar */}
      <div className="flex mb-4">
        <TextField
          className="flex-grow mr-2 bg-white"
          placeholder="Search using trip#, order # or customer name"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          variant="outlined"
          size="small"
        />
        <Button variant="contained" onClick={handleSearch}>
          Search
        </Button>
      </div>

      {/* Trips Section */}
      <div className="space-y-4">
        {mockTrips.map((trip, index) => (
          <Accordion key={trip.id} defaultExpanded={index === 0}>
            <AccordionSummary
              expandIcon={<ExpandMoreIcon />}
              className="bg-white"
            >
              <div className="flex justify-between w-full">
                <Typography>
                  Trip #{trip.id} | {trip.orders.length} orders | {trip.date} |{" "}
                  {trip.timeRange}
                </Typography>
                <Typography
                  className={
                    trip.status === "Trip in progress"
                      ? "text-blue-600"
                      : "text-gray-600"
                  }
                >
                  {trip.status}
                </Typography>
              </div>
            </AccordionSummary>
            <AccordionDetails className="bg-white">
              <RadioGroup value={selectedOrder} onChange={handleOrderSelection}>
                {trip.orders.map((order) => (
                  <FormControlLabel
                    key={order.id}
                    value={order.id}
                    control={<Radio />}
                    label={
                      <div className="flex justify-between w-full py-2 border-b">
                        <span>
                          {order.customer} | Order #{order.id} | {order.time}
                        </span>
                        <span
                          className={
                            order.status === "Cancelled"
                              ? "text-red-600"
                              : "text-green-600"
                          }
                        >
                          {order.status}
                        </span>
                      </div>
                    }
                  />
                ))}
              </RadioGroup>

              {/* Pickup Location */}
              {trip.pickup && (
                <div className="mt-4 p-2 bg-gray-100 rounded">
                  <div className="flex items-center">
                    <div>
                      <p className="font-semibold">
                        {trip.pickup.name} | {trip.pickup.time}
                      </p>
                      <p className="text-gray-600 flex items-center">
                        <LocationOnIcon
                          className="text-gray-400 mr-1"
                          fontSize="small"
                        />
                        {trip.pickup.address}
                      </p>
                    </div>
                  </div>
                </div>
              )}
            </AccordionDetails>
          </Accordion>
        ))}
      </div>
    </div>
  );
};

export default DriverOrderSelection;
